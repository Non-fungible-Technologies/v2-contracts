{
    "manifestVersion": "3.2",
    "proxies": [
        {
            "address": "0x64400724C1F4Da05620427F6a70a7FeE1118DC26",
            "txHash": "0xa696050acb4adc091272fe36d35e58776f122e817ca60e8f4331d41854e6b97c",
            "kind": "uups"
        },
        {
            "address": "0x9d9baf2D6025220fE6AC013a040824C6c5Ce62E2",
            "txHash": "0xe4fe35654405f1df18f882ba374920af8e287e21a70ee6aac7423d0069f20d9f",
            "kind": "uups"
        },
        {
            "address": "0x4dE6F933E22de2Fe96a66A0ae5C89856b025670e",
            "txHash": "0x4d3a1f75ca7a8a2c9b5f321a8bfd72058555110f87ae3a19cb16aaed133ca334",
            "kind": "uups"
        },
        {
            "address": "0x2AE86Bd348c65D50d2f18ED6Dc0C43fEa51De126",
            "txHash": "0x2e522c2ea0b170af4145addf6e6ddc88b63d8e3301a8bfed360d44080fc002a2",
            "kind": "uups"
        }
    ],
    "impls": {
        "52674a9014b88a94e0fa72b23856de2f49819428033756f1e81cbc826d629444": {
            "address": "0x4033F75c5b22ABd4BeDB22A663Eaa5E4a83B4302",
            "txHash": "0x7d87f124ba6f22672b66ebdf1e6d6d3fb7ee9733b7635ffef9308a3c38c16289",
            "layout": {
                "storage": [
                    {
                        "label": "_initialized",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_bool",
                        "contract": "Initializable",
                        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
                    },
                    {
                        "label": "_initializing",
                        "offset": 1,
                        "slot": "0",
                        "type": "t_bool",
                        "contract": "Initializable",
                        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
                    },
                    {
                        "label": "__gap",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_array(t_uint256)50_storage",
                        "contract": "ContextUpgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
                    },
                    {
                        "label": "__gap",
                        "offset": 0,
                        "slot": "51",
                        "type": "t_array(t_uint256)50_storage",
                        "contract": "ERC165Upgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
                    },
                    {
                        "label": "_name",
                        "offset": 0,
                        "slot": "101",
                        "type": "t_string_storage",
                        "contract": "ERC721Upgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
                    },
                    {
                        "label": "_symbol",
                        "offset": 0,
                        "slot": "102",
                        "type": "t_string_storage",
                        "contract": "ERC721Upgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
                    },
                    {
                        "label": "_owners",
                        "offset": 0,
                        "slot": "103",
                        "type": "t_mapping(t_uint256,t_address)",
                        "contract": "ERC721Upgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
                    },
                    {
                        "label": "_balances",
                        "offset": 0,
                        "slot": "104",
                        "type": "t_mapping(t_address,t_uint256)",
                        "contract": "ERC721Upgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
                    },
                    {
                        "label": "_tokenApprovals",
                        "offset": 0,
                        "slot": "105",
                        "type": "t_mapping(t_uint256,t_address)",
                        "contract": "ERC721Upgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
                    },
                    {
                        "label": "_operatorApprovals",
                        "offset": 0,
                        "slot": "106",
                        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                        "contract": "ERC721Upgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
                    },
                    {
                        "label": "__gap",
                        "offset": 0,
                        "slot": "107",
                        "type": "t_array(t_uint256)44_storage",
                        "contract": "ERC721Upgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
                    },
                    {
                        "label": "_ownedTokens",
                        "offset": 0,
                        "slot": "151",
                        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                        "contract": "ERC721EnumerableUpgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
                    },
                    {
                        "label": "_ownedTokensIndex",
                        "offset": 0,
                        "slot": "152",
                        "type": "t_mapping(t_uint256,t_uint256)",
                        "contract": "ERC721EnumerableUpgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
                    },
                    {
                        "label": "_allTokens",
                        "offset": 0,
                        "slot": "153",
                        "type": "t_array(t_uint256)dyn_storage",
                        "contract": "ERC721EnumerableUpgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
                    },
                    {
                        "label": "_allTokensIndex",
                        "offset": 0,
                        "slot": "154",
                        "type": "t_mapping(t_uint256,t_uint256)",
                        "contract": "ERC721EnumerableUpgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
                    },
                    {
                        "label": "__gap",
                        "offset": 0,
                        "slot": "155",
                        "type": "t_array(t_uint256)46_storage",
                        "contract": "ERC721EnumerableUpgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
                    },
                    {
                        "label": "_roles",
                        "offset": 0,
                        "slot": "201",
                        "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
                        "contract": "AccessControlUpgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
                    },
                    {
                        "label": "__gap",
                        "offset": 0,
                        "slot": "202",
                        "type": "t_array(t_uint256)49_storage",
                        "contract": "AccessControlUpgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
                    },
                    {
                        "label": "_HASHED_NAME",
                        "offset": 0,
                        "slot": "251",
                        "type": "t_bytes32",
                        "contract": "EIP712Upgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
                    },
                    {
                        "label": "_HASHED_VERSION",
                        "offset": 0,
                        "slot": "252",
                        "type": "t_bytes32",
                        "contract": "EIP712Upgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
                    },
                    {
                        "label": "__gap",
                        "offset": 0,
                        "slot": "253",
                        "type": "t_array(t_uint256)50_storage",
                        "contract": "EIP712Upgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:118"
                    },
                    {
                        "label": "__gap",
                        "offset": 0,
                        "slot": "303",
                        "type": "t_array(t_uint256)50_storage",
                        "contract": "ERC1967UpgradeUpgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
                    },
                    {
                        "label": "__gap",
                        "offset": 0,
                        "slot": "353",
                        "type": "t_array(t_uint256)50_storage",
                        "contract": "UUPSUpgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
                    },
                    {
                        "label": "_nonces",
                        "offset": 0,
                        "slot": "403",
                        "type": "t_mapping(t_address,t_struct(Counter)3156_storage)",
                        "contract": "ERC721PermitUpgradeable",
                        "src": "contracts/ERC721PermitUpgradeable.sol:49"
                    },
                    {
                        "label": "template",
                        "offset": 0,
                        "slot": "404",
                        "type": "t_address",
                        "contract": "VaultFactory",
                        "src": "contracts/vault/VaultFactory.sol:39"
                    },
                    {
                        "label": "whitelist",
                        "offset": 0,
                        "slot": "405",
                        "type": "t_address",
                        "contract": "VaultFactory",
                        "src": "contracts/vault/VaultFactory.sol:41"
                    }
                ],
                "types": {
                    "t_address": {
                        "label": "address",
                        "numberOfBytes": "20"
                    },
                    "t_array(t_uint256)44_storage": {
                        "label": "uint256[44]",
                        "numberOfBytes": "1408"
                    },
                    "t_array(t_uint256)46_storage": {
                        "label": "uint256[46]",
                        "numberOfBytes": "1472"
                    },
                    "t_array(t_uint256)49_storage": {
                        "label": "uint256[49]",
                        "numberOfBytes": "1568"
                    },
                    "t_array(t_uint256)50_storage": {
                        "label": "uint256[50]",
                        "numberOfBytes": "1600"
                    },
                    "t_array(t_uint256)dyn_storage": {
                        "label": "uint256[]",
                        "numberOfBytes": "32"
                    },
                    "t_bool": {
                        "label": "bool",
                        "numberOfBytes": "1"
                    },
                    "t_bytes32": {
                        "label": "bytes32",
                        "numberOfBytes": "32"
                    },
                    "t_mapping(t_address,t_bool)": {
                        "label": "mapping(address => bool)",
                        "numberOfBytes": "32"
                    },
                    "t_mapping(t_address,t_mapping(t_address,t_bool))": {
                        "label": "mapping(address => mapping(address => bool))",
                        "numberOfBytes": "32"
                    },
                    "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
                        "label": "mapping(address => mapping(uint256 => uint256))",
                        "numberOfBytes": "32"
                    },
                    "t_mapping(t_address,t_struct(Counter)3156_storage)": {
                        "label": "mapping(address => struct CountersUpgradeable.Counter)",
                        "numberOfBytes": "32"
                    },
                    "t_mapping(t_address,t_uint256)": {
                        "label": "mapping(address => uint256)",
                        "numberOfBytes": "32"
                    },
                    "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
                        "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
                        "numberOfBytes": "32"
                    },
                    "t_mapping(t_uint256,t_address)": {
                        "label": "mapping(uint256 => address)",
                        "numberOfBytes": "32"
                    },
                    "t_mapping(t_uint256,t_uint256)": {
                        "label": "mapping(uint256 => uint256)",
                        "numberOfBytes": "32"
                    },
                    "t_string_storage": {
                        "label": "string",
                        "numberOfBytes": "32"
                    },
                    "t_struct(Counter)3156_storage": {
                        "label": "struct CountersUpgradeable.Counter",
                        "members": [
                            {
                                "label": "_value",
                                "type": "t_uint256",
                                "offset": 0,
                                "slot": "0"
                            }
                        ],
                        "numberOfBytes": "32"
                    },
                    "t_struct(RoleData)34_storage": {
                        "label": "struct AccessControlUpgradeable.RoleData",
                        "members": [
                            {
                                "label": "members",
                                "type": "t_mapping(t_address,t_bool)",
                                "offset": 0,
                                "slot": "0"
                            },
                            {
                                "label": "adminRole",
                                "type": "t_bytes32",
                                "offset": 0,
                                "slot": "1"
                            }
                        ],
                        "numberOfBytes": "64"
                    },
                    "t_uint256": {
                        "label": "uint256",
                        "numberOfBytes": "32"
                    }
                }
            }
        },
        "45f7082dc8376ab135368e3f759bbd8642423aaed0195389ecccdffe15290b3a": {
            "address": "0x2Cf39237FF98A9977bfe6195b1b54d7d700534cc",
            "txHash": "0x9304dcf1359f4f8b81ee3dcf2d61ed77d2e71001b16641cc4ec013da82659b96",
            "layout": {
                "storage": [
                    {
                        "label": "_initialized",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_bool",
                        "contract": "Initializable",
                        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
                    },
                    {
                        "label": "_initializing",
                        "offset": 1,
                        "slot": "0",
                        "type": "t_bool",
                        "contract": "Initializable",
                        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
                    },
                    {
                        "label": "__gap",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_array(t_uint256)50_storage",
                        "contract": "ContextUpgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
                    },
                    {
                        "label": "__gap",
                        "offset": 0,
                        "slot": "51",
                        "type": "t_array(t_uint256)50_storage",
                        "contract": "ERC165Upgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
                    },
                    {
                        "label": "_roles",
                        "offset": 0,
                        "slot": "101",
                        "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
                        "contract": "AccessControlUpgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
                    },
                    {
                        "label": "__gap",
                        "offset": 0,
                        "slot": "102",
                        "type": "t_array(t_uint256)49_storage",
                        "contract": "AccessControlUpgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
                    },
                    {
                        "label": "_paused",
                        "offset": 0,
                        "slot": "151",
                        "type": "t_bool",
                        "contract": "PausableUpgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
                    },
                    {
                        "label": "__gap",
                        "offset": 0,
                        "slot": "152",
                        "type": "t_array(t_uint256)49_storage",
                        "contract": "PausableUpgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
                    },
                    {
                        "label": "__gap",
                        "offset": 0,
                        "slot": "201",
                        "type": "t_array(t_uint256)50_storage",
                        "contract": "ERC1967UpgradeUpgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
                    },
                    {
                        "label": "__gap",
                        "offset": 0,
                        "slot": "251",
                        "type": "t_array(t_uint256)50_storage",
                        "contract": "UUPSUpgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
                    },
                    {
                        "label": "borrowerNote",
                        "offset": 0,
                        "slot": "301",
                        "type": "t_contract(IPromissoryNote)8981",
                        "contract": "LoanCore",
                        "src": "contracts/LoanCore.sol:60"
                    },
                    {
                        "label": "lenderNote",
                        "offset": 0,
                        "slot": "302",
                        "type": "t_contract(IPromissoryNote)8981",
                        "contract": "LoanCore",
                        "src": "contracts/LoanCore.sol:61"
                    },
                    {
                        "label": "feeController",
                        "offset": 0,
                        "slot": "303",
                        "type": "t_contract(IFeeController)8770",
                        "contract": "LoanCore",
                        "src": "contracts/LoanCore.sol:62"
                    },
                    {
                        "label": "loanIdTracker",
                        "offset": 0,
                        "slot": "304",
                        "type": "t_struct(Counter)1820_storage",
                        "contract": "LoanCore",
                        "src": "contracts/LoanCore.sol:66"
                    },
                    {
                        "label": "loans",
                        "offset": 0,
                        "slot": "305",
                        "type": "t_mapping(t_uint256,t_struct(LoanData)9057_storage)",
                        "contract": "LoanCore",
                        "src": "contracts/LoanCore.sol:67"
                    },
                    {
                        "label": "collateralInUse",
                        "offset": 0,
                        "slot": "306",
                        "type": "t_mapping(t_bytes32,t_bool)",
                        "contract": "LoanCore",
                        "src": "contracts/LoanCore.sol:69"
                    },
                    {
                        "label": "usedNonces",
                        "offset": 0,
                        "slot": "307",
                        "type": "t_mapping(t_address,t_mapping(t_uint160,t_bool))",
                        "contract": "LoanCore",
                        "src": "contracts/LoanCore.sol:70"
                    }
                ],
                "types": {
                    "t_address": {
                        "label": "address",
                        "numberOfBytes": "20"
                    },
                    "t_array(t_uint256)49_storage": {
                        "label": "uint256[49]",
                        "numberOfBytes": "1568"
                    },
                    "t_array(t_uint256)50_storage": {
                        "label": "uint256[50]",
                        "numberOfBytes": "1600"
                    },
                    "t_bool": {
                        "label": "bool",
                        "numberOfBytes": "1"
                    },
                    "t_bytes32": {
                        "label": "bytes32",
                        "numberOfBytes": "32"
                    },
                    "t_contract(IFeeController)8770": {
                        "label": "contract IFeeController",
                        "numberOfBytes": "20"
                    },
                    "t_contract(IPromissoryNote)8981": {
                        "label": "contract IPromissoryNote",
                        "numberOfBytes": "20"
                    },
                    "t_enum(LoanState)8989": {
                        "label": "enum LoanLibrary.LoanState",
                        "members": ["DUMMY_DO_NOT_USE", "Active", "Repaid", "Defaulted"],
                        "numberOfBytes": "1"
                    },
                    "t_mapping(t_address,t_bool)": {
                        "label": "mapping(address => bool)",
                        "numberOfBytes": "32"
                    },
                    "t_mapping(t_address,t_mapping(t_uint160,t_bool))": {
                        "label": "mapping(address => mapping(uint160 => bool))",
                        "numberOfBytes": "32"
                    },
                    "t_mapping(t_bytes32,t_bool)": {
                        "label": "mapping(bytes32 => bool)",
                        "numberOfBytes": "32"
                    },
                    "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
                        "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
                        "numberOfBytes": "32"
                    },
                    "t_mapping(t_uint160,t_bool)": {
                        "label": "mapping(uint160 => bool)",
                        "numberOfBytes": "32"
                    },
                    "t_mapping(t_uint256,t_struct(LoanData)9057_storage)": {
                        "label": "mapping(uint256 => struct LoanLibrary.LoanData)",
                        "numberOfBytes": "32"
                    },
                    "t_struct(Counter)1820_storage": {
                        "label": "struct CountersUpgradeable.Counter",
                        "members": [
                            {
                                "label": "_value",
                                "type": "t_uint256",
                                "offset": 0,
                                "slot": "0"
                            }
                        ],
                        "numberOfBytes": "32"
                    },
                    "t_struct(LoanData)9057_storage": {
                        "label": "struct LoanLibrary.LoanData",
                        "members": [
                            {
                                "label": "state",
                                "type": "t_enum(LoanState)8989",
                                "offset": 0,
                                "slot": "0"
                            },
                            {
                                "label": "numInstallmentsPaid",
                                "type": "t_uint24",
                                "offset": 1,
                                "slot": "0"
                            },
                            {
                                "label": "startDate",
                                "type": "t_uint160",
                                "offset": 4,
                                "slot": "0"
                            },
                            {
                                "label": "terms",
                                "type": "t_struct(LoanTerms)9011_storage",
                                "offset": 0,
                                "slot": "1"
                            },
                            {
                                "label": "balance",
                                "type": "t_uint256",
                                "offset": 0,
                                "slot": "6"
                            },
                            {
                                "label": "balancePaid",
                                "type": "t_uint256",
                                "offset": 0,
                                "slot": "7"
                            },
                            {
                                "label": "lateFeesAccrued",
                                "type": "t_uint256",
                                "offset": 0,
                                "slot": "8"
                            }
                        ],
                        "numberOfBytes": "288"
                    },
                    "t_struct(LoanTerms)9011_storage": {
                        "label": "struct LoanLibrary.LoanTerms",
                        "members": [
                            {
                                "label": "durationSecs",
                                "type": "t_uint32",
                                "offset": 0,
                                "slot": "0"
                            },
                            {
                                "label": "deadline",
                                "type": "t_uint32",
                                "offset": 4,
                                "slot": "0"
                            },
                            {
                                "label": "numInstallments",
                                "type": "t_uint24",
                                "offset": 8,
                                "slot": "0"
                            },
                            {
                                "label": "interestRate",
                                "type": "t_uint160",
                                "offset": 11,
                                "slot": "0"
                            },
                            {
                                "label": "principal",
                                "type": "t_uint256",
                                "offset": 0,
                                "slot": "1"
                            },
                            {
                                "label": "collateralAddress",
                                "type": "t_address",
                                "offset": 0,
                                "slot": "2"
                            },
                            {
                                "label": "collateralId",
                                "type": "t_uint256",
                                "offset": 0,
                                "slot": "3"
                            },
                            {
                                "label": "payableCurrency",
                                "type": "t_address",
                                "offset": 0,
                                "slot": "4"
                            }
                        ],
                        "numberOfBytes": "160"
                    },
                    "t_struct(RoleData)34_storage": {
                        "label": "struct AccessControlUpgradeable.RoleData",
                        "members": [
                            {
                                "label": "members",
                                "type": "t_mapping(t_address,t_bool)",
                                "offset": 0,
                                "slot": "0"
                            },
                            {
                                "label": "adminRole",
                                "type": "t_bytes32",
                                "offset": 0,
                                "slot": "1"
                            }
                        ],
                        "numberOfBytes": "64"
                    },
                    "t_uint160": {
                        "label": "uint160",
                        "numberOfBytes": "20"
                    },
                    "t_uint24": {
                        "label": "uint24",
                        "numberOfBytes": "3"
                    },
                    "t_uint256": {
                        "label": "uint256",
                        "numberOfBytes": "32"
                    },
                    "t_uint32": {
                        "label": "uint32",
                        "numberOfBytes": "4"
                    }
                }
            }
        },
        "bcc737bbb84a553231dd7d3c14ce2eee703c89866385f34176442a2610c5ba15": {
            "address": "0x7f3b4B03D892c32bab085959fCcEaad32E2Cf5bb",
            "txHash": "0x3891df09fd201541096a810e63db56620a4bf30700ff03bcf513b5c5d585c9cb",
            "layout": {
                "storage": [
                    {
                        "label": "_initialized",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_bool",
                        "contract": "Initializable",
                        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
                    },
                    {
                        "label": "_initializing",
                        "offset": 1,
                        "slot": "0",
                        "type": "t_bool",
                        "contract": "Initializable",
                        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
                    },
                    {
                        "label": "__gap",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_array(t_uint256)50_storage",
                        "contract": "ContextUpgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
                    },
                    {
                        "label": "_HASHED_NAME",
                        "offset": 0,
                        "slot": "51",
                        "type": "t_bytes32",
                        "contract": "EIP712Upgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
                    },
                    {
                        "label": "_HASHED_VERSION",
                        "offset": 0,
                        "slot": "52",
                        "type": "t_bytes32",
                        "contract": "EIP712Upgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
                    },
                    {
                        "label": "__gap",
                        "offset": 0,
                        "slot": "53",
                        "type": "t_array(t_uint256)50_storage",
                        "contract": "EIP712Upgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:118"
                    },
                    {
                        "label": "_status",
                        "offset": 0,
                        "slot": "103",
                        "type": "t_uint256",
                        "contract": "ReentrancyGuardUpgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
                    },
                    {
                        "label": "__gap",
                        "offset": 0,
                        "slot": "104",
                        "type": "t_array(t_uint256)49_storage",
                        "contract": "ReentrancyGuardUpgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
                    },
                    {
                        "label": "_owner",
                        "offset": 0,
                        "slot": "153",
                        "type": "t_address",
                        "contract": "OwnableUpgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
                    },
                    {
                        "label": "__gap",
                        "offset": 0,
                        "slot": "154",
                        "type": "t_array(t_uint256)49_storage",
                        "contract": "OwnableUpgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
                    },
                    {
                        "label": "__gap",
                        "offset": 0,
                        "slot": "203",
                        "type": "t_array(t_uint256)50_storage",
                        "contract": "ERC1967UpgradeUpgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
                    },
                    {
                        "label": "__gap",
                        "offset": 0,
                        "slot": "253",
                        "type": "t_array(t_uint256)50_storage",
                        "contract": "UUPSUpgradeable",
                        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
                    },
                    {
                        "label": "loanCore",
                        "offset": 0,
                        "slot": "303",
                        "type": "t_address",
                        "contract": "OriginationController",
                        "src": "contracts/OriginationController.sol:70"
                    },
                    {
                        "label": "_signerApprovals",
                        "offset": 0,
                        "slot": "304",
                        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                        "contract": "OriginationController",
                        "src": "contracts/OriginationController.sol:75"
                    },
                    {
                        "label": "allowedVerifiers",
                        "offset": 0,
                        "slot": "305",
                        "type": "t_mapping(t_address,t_bool)",
                        "contract": "OriginationController",
                        "src": "contracts/OriginationController.sol:77"
                    }
                ],
                "types": {
                    "t_address": {
                        "label": "address",
                        "numberOfBytes": "20"
                    },
                    "t_array(t_uint256)49_storage": {
                        "label": "uint256[49]",
                        "numberOfBytes": "1568"
                    },
                    "t_array(t_uint256)50_storage": {
                        "label": "uint256[50]",
                        "numberOfBytes": "1600"
                    },
                    "t_bool": {
                        "label": "bool",
                        "numberOfBytes": "1"
                    },
                    "t_bytes32": {
                        "label": "bytes32",
                        "numberOfBytes": "32"
                    },
                    "t_mapping(t_address,t_bool)": {
                        "label": "mapping(address => bool)",
                        "numberOfBytes": "32"
                    },
                    "t_mapping(t_address,t_mapping(t_address,t_bool))": {
                        "label": "mapping(address => mapping(address => bool))",
                        "numberOfBytes": "32"
                    },
                    "t_uint256": {
                        "label": "uint256",
                        "numberOfBytes": "32"
                    }
                }
            }
        }
    }
}
