{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xA555C09362c1f1F914a058EF05F1187643c325e7",
      "txHash": "0x0faaf1194675ef669541cde2b6303dd84774bcba11e3cad7ecf0b0a8292148f7",
      "kind": "uups"
    },
    {
      "address": "0xf5Fe6EcF71Ca9f155E60eb142a0ea4F49067CE68",
      "txHash": "0x86a6f1cdf809717ff5687f8bf19e04c88732333d9207f6788cd9d389b8109168",
      "kind": "uups"
    },
    {
      "address": "0xa178e8Fc382B46E6bA15f2A37FDf4930B9dC6613",
      "txHash": "0x8efa4128a2de0417edffc48fb08f52f72c5416a9bf4a4e19f2c042722b897f93",
      "kind": "uups"
    },
    {
      "address": "0x808D5404dc2463469C6b6378b2e7EcE41e0F898E",
      "txHash": "0x0930cd203f817acfd125bde4ee4e7217d777fa22093c20c482820e230e83a26b",
      "kind": "uups"
    },
    {
      "address": "0x1F979329CC4C642b7b9509866Df3647D191a92F4",
      "txHash": "0x13b360c41860fbdecfbfe2dcfde1b7cbdea76b15c93fda4713efbfc323008a1e",
      "kind": "uups"
    },
    {
      "address": "0x8AF8196136f5DAF7D5B6388b043D521fc4515Be8",
      "txHash": "0x6201662ece605c985f45771ae726e28538a54fc879768df95763bcb915052bea",
      "kind": "uups"
    },
    {
      "address": "0x5d64D9d101bD9876D580d3223B6FA69a3033b93A",
      "txHash": "0x465dff3b7de6ee2f2e5214f685c4f3061ab8ec4ba1f79dd9427791c9360bea07",
      "kind": "uups"
    },
    {
      "address": "0x07F47Eaa0EED53B8534e65520447AF26eF28b5c6",
      "txHash": "0x9ccf760ded5727ae2eff8ca37a947c1bcf2080ffdcaf10ab63652f84976208cf",
      "kind": "uups"
    },
    {
      "address": "0x9f00Fc408c373bC60cf68F12B32B9c0C14757Ef5",
      "txHash": "0x5019495574b5f4e3f2cf46d40e8649e26fab07b4d755aa67bcea16689498ee68",
      "kind": "uups"
    },
    {
      "address": "0x330a4e1ac086bDF3274Aed3f7cCa55fEA3D12827",
      "txHash": "0x8403490be086de459d70b5f58b1c10794eec231cad7f36b80ba087b6eeb73e13",
      "kind": "uups"
    },
    {
      "address": "0x77B2f749078Ed84A18beC8a136F0452311F93BF3",
      "txHash": "0x95ad550a8567993af789f1b16168b24dc4cc3c5ed24551a523a0a61161ebe348",
      "kind": "uups"
    },
    {
      "address": "0x2eAC26652341E84a3DdD4F7844a341f27C25E445",
      "txHash": "0x8bd0955f9d9de77bf73c75f2d79a2c19b336cbed60e9e2c157814cb07708343d",
      "kind": "uups"
    },
    {
      "address": "0xe5C92a840912E722E5116c1210a9ab3146cCe42f",
      "txHash": "0x59ff5e13bcf4864f5fc0a931b8cc55083a6f67569336089dee6f3c4591f30be4",
      "kind": "uups"
    },
    {
      "address": "0xd107E2a085D69168d318a2CE65F335F0b1CB21dE",
      "txHash": "0xee951607c8aa53a977ed1ae6afbc43f2eb7fe5ffbf9c0214404ccd14b29e346f",
      "kind": "uups"
    },
    {
      "address": "0xBfbC4068C35CfBD5ed8F65480c24661d91c4450C",
      "txHash": "0x6b2e9a7df6c11c0a94170449137b4d9116d99f8d246051bde3559965979107a5",
      "kind": "uups"
    },
    {
      "address": "0x67E081Eaf2cb6C166A9DC36D73459757198348bc",
      "txHash": "0xe901d0b3c1c3461e8c1b4ef8a75c770f4b224ca6dc5e585ab23635b99578b1cc",
      "kind": "uups"
    },
    {
      "address": "0x3539201CBD8007de00Ce4b2eC5F2839E15fCf5d5",
      "txHash": "0xa7b1c49c73358e0ba37a35caa53612a5793e3bf3bed183bb4b6ffa7c7308442f",
      "kind": "uups"
    },
    {
      "address": "0x8c7f43A5E6C8bFB413F6C653ad04f108cB393e98",
      "txHash": "0x2c844d5e187f688a84a8c76cd8333116a09d625b79f3c18123acdcf192d5784a",
      "kind": "uups"
    },
    {
      "address": "0x6B1d7D674b500f99E8be424b809f9DeC1613C5F2",
      "txHash": "0x9b45a2cc46667bf666c31dd43e06f3880ba3c9b6d40a65657d501b9a2e2aa4e4",
      "kind": "uups"
    },
    {
      "address": "0x2122fECa09E695687C68495ec8BA1f1669286aa9",
      "txHash": "0x695c76a78fe1ac036166b8a8f5aa0be56390614a54d82f2dbc0f6520a6d95dd7",
      "kind": "uups"
    },
    {
      "address": "0x770167Cb3F7bdbb115F6BF9b25a1cEB23b1280Ec",
      "txHash": "0xaaf50826c39b1bb6d2514e1e9d7ae2e68ae7ecc655ab781903228b2125f5fa68",
      "kind": "uups"
    },
    {
      "address": "0x2985f614c028828cCC407a54D1b63Ae1125d5525",
      "txHash": "0x56630ffa9943a2504f1bf8772b110baf12170fe21494b60874c3c29e15bb6bb4",
      "kind": "uups"
    }
  ],
  "impls": {
    "52674a9014b88a94e0fa72b23856de2f49819428033756f1e81cbc826d629444": {
      "address": "0xa4C43194CB2ed3aC98C79cfC47bc989C1EA9C3eb",
      "txHash": "0xc997d323a06c98f92b7ea196f629a5615d355d563ac08b41ca903e339e41dd07",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "251",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:118"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_address,t_struct(Counter)4088_storage)",
            "contract": "ERC721PermitUpgradeable",
            "src": "contracts/ERC721PermitUpgradeable.sol:49"
          },
          {
            "label": "template",
            "offset": 0,
            "slot": "404",
            "type": "t_address",
            "contract": "VaultFactory",
            "src": "contracts/vault/VaultFactory.sol:39"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "405",
            "type": "t_address",
            "contract": "VaultFactory",
            "src": "contracts/vault/VaultFactory.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)4088_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4088_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "45f7082dc8376ab135368e3f759bbd8642423aaed0195389ecccdffe15290b3a": {
      "address": "0xbB3eB07a65E9352a347C43eED6D8081a41e1458E",
      "txHash": "0x75e9e6d7050a096109a39460fac575a01f789734dcd0e249ac33e0daec51a761",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "borrowerNote",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IPromissoryNote)19374",
            "contract": "LoanCore",
            "src": "contracts/LoanCore.sol:60"
          },
          {
            "label": "lenderNote",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IPromissoryNote)19374",
            "contract": "LoanCore",
            "src": "contracts/LoanCore.sol:61"
          },
          {
            "label": "feeController",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(IFeeController)18752",
            "contract": "LoanCore",
            "src": "contracts/LoanCore.sol:62"
          },
          {
            "label": "loanIdTracker",
            "offset": 0,
            "slot": "304",
            "type": "t_struct(Counter)4088_storage",
            "contract": "LoanCore",
            "src": "contracts/LoanCore.sol:66"
          },
          {
            "label": "loans",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_struct(LoanData)19555_storage)",
            "contract": "LoanCore",
            "src": "contracts/LoanCore.sol:67"
          },
          {
            "label": "collateralInUse",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "LoanCore",
            "src": "contracts/LoanCore.sol:69"
          },
          {
            "label": "usedNonces",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_mapping(t_uint160,t_bool))",
            "contract": "LoanCore",
            "src": "contracts/LoanCore.sol:70"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IFeeController)18752": {
            "label": "contract IFeeController",
            "numberOfBytes": "20"
          },
          "t_contract(IPromissoryNote)19374": {
            "label": "contract IPromissoryNote",
            "numberOfBytes": "20"
          },
          "t_enum(LoanState)19487": {
            "label": "enum LoanLibrary.LoanState",
            "members": [
              "DUMMY_DO_NOT_USE",
              "Active",
              "Repaid",
              "Defaulted"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint160,t_bool))": {
            "label": "mapping(address => mapping(uint160 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint160,t_bool)": {
            "label": "mapping(uint160 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanData)19555_storage)": {
            "label": "mapping(uint256 => struct LoanLibrary.LoanData)",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4088_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LoanData)19555_storage": {
            "label": "struct LoanLibrary.LoanData",
            "members": [
              {
                "label": "state",
                "type": "t_enum(LoanState)19487",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "numInstallmentsPaid",
                "type": "t_uint24",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "startDate",
                "type": "t_uint160",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "terms",
                "type": "t_struct(LoanTerms)19509_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "balancePaid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "lateFeesAccrued",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LoanTerms)19509_storage": {
            "label": "struct LoanLibrary.LoanTerms",
            "members": [
              {
                "label": "durationSecs",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "deadline",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "numInstallments",
                "type": "t_uint24",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "interestRate",
                "type": "t_uint160",
                "offset": 11,
                "slot": "0"
              },
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "collateralAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "collateralId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "payableCurrency",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint160": {
            "label": "uint160",
            "numberOfBytes": "20"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        }
      }
    },
    "bcc737bbb84a553231dd7d3c14ce2eee703c89866385f34176442a2610c5ba15": {
      "address": "0x7D975aCC0D577E22dA01f1809DF56855283E3BE0",
      "txHash": "0xa74f8819480ea3ce300a95b1165b7203f0c1d3d01dfd7fceecbe0715f0e8ebde",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "51",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "52",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "53",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:118"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "loanCore",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "OriginationController",
            "src": "contracts/OriginationController.sol:70"
          },
          {
            "label": "_signerApprovals",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "OriginationController",
            "src": "contracts/OriginationController.sol:75"
          },
          {
            "label": "allowedVerifiers",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "OriginationController",
            "src": "contracts/OriginationController.sol:77"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    }
  }
}
